import torch
from torch import tensor
import torch.nn as nn
from torch.nn import *
import torchvision
import torchvision.models as models
from torchvision.ops.stochastic_depth import stochastic_depth
import time
import builtins
import operator

class M(torch.nn.Module):
    def __init__(self):
        super(M, self).__init__()
        self.conv2d0 = Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
        self.batchnorm2d0 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d0 = MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.conv2d1 = Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d1 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d2 = Conv2d(64, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d2 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d1 = MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.conv2d3 = Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d3 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d4 = Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d4 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d5 = Conv2d(96, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d5 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d6 = Conv2d(192, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d6 = BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d7 = Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d7 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d2 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d8 = Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d8 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d9 = Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d9 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d10 = Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d10 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d11 = Conv2d(128, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d11 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d12 = Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d12 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d13 = Conv2d(32, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d13 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d3 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d14 = Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d14 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d4 = MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.conv2d15 = Conv2d(480, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d15 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d16 = Conv2d(480, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d16 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d17 = Conv2d(96, 208, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d17 = BatchNorm2d(208, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d18 = Conv2d(480, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d18 = BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d19 = Conv2d(16, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d19 = BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d5 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d20 = Conv2d(480, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d20 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d21 = Conv2d(512, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d21 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d22 = Conv2d(512, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d22 = BatchNorm2d(112, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d23 = Conv2d(112, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d23 = BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d24 = Conv2d(512, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d24 = BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d25 = Conv2d(24, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d25 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d6 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d26 = Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d26 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d27 = Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d27 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d28 = Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d28 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d29 = Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d29 = BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d30 = Conv2d(512, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d30 = BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d31 = Conv2d(24, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d31 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d7 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d32 = Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d32 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d33 = Conv2d(512, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d33 = BatchNorm2d(112, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d34 = Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d34 = BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d35 = Conv2d(144, 288, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d35 = BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d36 = Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d36 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d37 = Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d37 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d8 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d38 = Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d38 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d39 = Conv2d(528, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d39 = BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d40 = Conv2d(528, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d40 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d41 = Conv2d(160, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d41 = BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d42 = Conv2d(528, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d42 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d43 = Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d43 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d9 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d44 = Conv2d(528, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d44 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d10 = MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.conv2d45 = Conv2d(832, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d45 = BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d46 = Conv2d(832, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d46 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d47 = Conv2d(160, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d47 = BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d48 = Conv2d(832, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d48 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d49 = Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d49 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d11 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d50 = Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d50 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d51 = Conv2d(832, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d51 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d52 = Conv2d(832, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d52 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d53 = Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d53 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d54 = Conv2d(832, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d54 = BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d55 = Conv2d(48, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d55 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d12 = MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.conv2d56 = Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d56 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.adaptiveavgpool2d0 = AdaptiveAvgPool2d(output_size=(1, 1))
        self.dropout0 = Dropout(p=0.2, inplace=False)
        self.linear0 = Linear(in_features=1024, out_features=1000, bias=True)

    def forward(self, x):
        x0=x
        x1=operator.getitem(x0, (slice(None, None, None), 0))
        x2=torch.unsqueeze(x1, 1)
        x3=operator.mul(x2, 0.458)
        x4=operator.add(x3, -0.030000000000000027)
        x5=operator.getitem(x0, (slice(None, None, None), 1))
        x6=torch.unsqueeze(x5, 1)
        x7=operator.mul(x6, 0.448)
        x8=operator.add(x7, -0.08799999999999997)
        x9=operator.getitem(x0, (slice(None, None, None), 2))
        x10=torch.unsqueeze(x9, 1)
        x11=operator.mul(x10, 0.45)
        x12=operator.add(x11, -0.18799999999999994)
        x13=torch.cat((x4, x8, x12), 1)
        x14=self.conv2d0(x13)
        x15=self.batchnorm2d0(x14)
        x16=torch.nn.functional.relu(x15,inplace=True)
        x17=self.maxpool2d0(x16)
        x18=self.conv2d1(x17)
        x19=self.batchnorm2d1(x18)
        x20=torch.nn.functional.relu(x19,inplace=True)
        x21=self.conv2d2(x20)
        x22=self.batchnorm2d2(x21)
        x23=torch.nn.functional.relu(x22,inplace=True)
        x24=self.maxpool2d1(x23)
        x25=self.conv2d3(x24)
        x26=self.batchnorm2d3(x25)
        x27=torch.nn.functional.relu(x26,inplace=True)
        x28=self.conv2d4(x24)
        x29=self.batchnorm2d4(x28)
        x30=torch.nn.functional.relu(x29,inplace=True)
        x31=self.conv2d5(x30)
        x32=self.batchnorm2d5(x31)
        x33=torch.nn.functional.relu(x32,inplace=True)
        x34=self.conv2d6(x24)
        x35=self.batchnorm2d6(x34)
        x36=torch.nn.functional.relu(x35,inplace=True)
        x37=self.conv2d7(x36)
        x38=self.batchnorm2d7(x37)
        x39=torch.nn.functional.relu(x38,inplace=True)
        x40=self.maxpool2d2(x24)
        x41=self.conv2d8(x40)
        x42=self.batchnorm2d8(x41)
        x43=torch.nn.functional.relu(x42,inplace=True)
        x44=torch.cat([x27, x33, x39, x43], 1)
        x45=self.conv2d9(x44)
        x46=self.batchnorm2d9(x45)
        x47=torch.nn.functional.relu(x46,inplace=True)
        x48=self.conv2d10(x44)
        x49=self.batchnorm2d10(x48)
        x50=torch.nn.functional.relu(x49,inplace=True)
        x51=self.conv2d11(x50)
        x52=self.batchnorm2d11(x51)
        x53=torch.nn.functional.relu(x52,inplace=True)
        x54=self.conv2d12(x44)
        x55=self.batchnorm2d12(x54)
        x56=torch.nn.functional.relu(x55,inplace=True)
        x57=self.conv2d13(x56)
        x58=self.batchnorm2d13(x57)
        x59=torch.nn.functional.relu(x58,inplace=True)
        x60=self.maxpool2d3(x44)
        x61=self.conv2d14(x60)
        x62=self.batchnorm2d14(x61)
        x63=torch.nn.functional.relu(x62,inplace=True)
        x64=torch.cat([x47, x53, x59, x63], 1)
        x65=self.maxpool2d4(x64)
        x66=self.conv2d15(x65)
        x67=self.batchnorm2d15(x66)
        x68=torch.nn.functional.relu(x67,inplace=True)
        x69=self.conv2d16(x65)
        x70=self.batchnorm2d16(x69)
        x71=torch.nn.functional.relu(x70,inplace=True)
        x72=self.conv2d17(x71)
        x73=self.batchnorm2d17(x72)
        x74=torch.nn.functional.relu(x73,inplace=True)
        x75=self.conv2d18(x65)
        x76=self.batchnorm2d18(x75)
        x77=torch.nn.functional.relu(x76,inplace=True)
        x78=self.conv2d19(x77)
        x79=self.batchnorm2d19(x78)
        x80=torch.nn.functional.relu(x79,inplace=True)
        x81=self.maxpool2d5(x65)
        x82=self.conv2d20(x81)
        x83=self.batchnorm2d20(x82)
        x84=torch.nn.functional.relu(x83,inplace=True)
        x85=torch.cat([x68, x74, x80, x84], 1)
        x86=self.conv2d21(x85)
        x87=self.batchnorm2d21(x86)
        x88=torch.nn.functional.relu(x87,inplace=True)
        x89=self.conv2d22(x85)
        x90=self.batchnorm2d22(x89)
        x91=torch.nn.functional.relu(x90,inplace=True)
        x92=self.conv2d23(x91)
        x93=self.batchnorm2d23(x92)
        x94=torch.nn.functional.relu(x93,inplace=True)
        x95=self.conv2d24(x85)
        x96=self.batchnorm2d24(x95)
        x97=torch.nn.functional.relu(x96,inplace=True)
        x98=self.conv2d25(x97)
        x99=self.batchnorm2d25(x98)
        x100=torch.nn.functional.relu(x99,inplace=True)
        x101=self.maxpool2d6(x85)
        x102=self.conv2d26(x101)
        x103=self.batchnorm2d26(x102)
        x104=torch.nn.functional.relu(x103,inplace=True)
        x105=torch.cat([x88, x94, x100, x104], 1)
        x106=self.conv2d27(x105)
        x107=self.batchnorm2d27(x106)
        x108=torch.nn.functional.relu(x107,inplace=True)
        x109=self.conv2d28(x105)
        x110=self.batchnorm2d28(x109)
        x111=torch.nn.functional.relu(x110,inplace=True)
        x112=self.conv2d29(x111)
        x113=self.batchnorm2d29(x112)
        x114=torch.nn.functional.relu(x113,inplace=True)
        x115=self.conv2d30(x105)
        x116=self.batchnorm2d30(x115)
        x117=torch.nn.functional.relu(x116,inplace=True)
        x118=self.conv2d31(x117)
        x119=self.batchnorm2d31(x118)
        x120=torch.nn.functional.relu(x119,inplace=True)
        x121=self.maxpool2d7(x105)
        x122=self.conv2d32(x121)
        x123=self.batchnorm2d32(x122)
        x124=torch.nn.functional.relu(x123,inplace=True)
        x125=torch.cat([x108, x114, x120, x124], 1)
        x126=self.conv2d33(x125)
        x127=self.batchnorm2d33(x126)
        x128=torch.nn.functional.relu(x127,inplace=True)
        x129=self.conv2d34(x125)
        x130=self.batchnorm2d34(x129)
        x131=torch.nn.functional.relu(x130,inplace=True)
        x132=self.conv2d35(x131)
        x133=self.batchnorm2d35(x132)
        x134=torch.nn.functional.relu(x133,inplace=True)
        x135=self.conv2d36(x125)
        x136=self.batchnorm2d36(x135)
        x137=torch.nn.functional.relu(x136,inplace=True)
        x138=self.conv2d37(x137)
        x139=self.batchnorm2d37(x138)
        x140=torch.nn.functional.relu(x139,inplace=True)
        x141=self.maxpool2d8(x125)
        x142=self.conv2d38(x141)
        x143=self.batchnorm2d38(x142)
        x144=torch.nn.functional.relu(x143,inplace=True)
        x145=torch.cat([x128, x134, x140, x144], 1)
        x146=self.conv2d39(x145)
        x147=self.batchnorm2d39(x146)
        x148=torch.nn.functional.relu(x147,inplace=True)
        x149=self.conv2d40(x145)
        x150=self.batchnorm2d40(x149)
        x151=torch.nn.functional.relu(x150,inplace=True)
        x152=self.conv2d41(x151)
        x153=self.batchnorm2d41(x152)
        x154=torch.nn.functional.relu(x153,inplace=True)
        x155=self.conv2d42(x145)
        x156=self.batchnorm2d42(x155)
        x157=torch.nn.functional.relu(x156,inplace=True)
        x158=self.conv2d43(x157)
        x159=self.batchnorm2d43(x158)
        x160=torch.nn.functional.relu(x159,inplace=True)
        x161=self.maxpool2d9(x145)
        x162=self.conv2d44(x161)
        x163=self.batchnorm2d44(x162)
        x164=torch.nn.functional.relu(x163,inplace=True)
        x165=torch.cat([x148, x154, x160, x164], 1)
        x166=self.maxpool2d10(x165)
        x167=self.conv2d45(x166)
        x168=self.batchnorm2d45(x167)
        x169=torch.nn.functional.relu(x168,inplace=True)
        x170=self.conv2d46(x166)
        x171=self.batchnorm2d46(x170)
        x172=torch.nn.functional.relu(x171,inplace=True)
        x173=self.conv2d47(x172)
        x174=self.batchnorm2d47(x173)
        x175=torch.nn.functional.relu(x174,inplace=True)
        x176=self.conv2d48(x166)
        x177=self.batchnorm2d48(x176)
        x178=torch.nn.functional.relu(x177,inplace=True)
        x179=self.conv2d49(x178)
        x180=self.batchnorm2d49(x179)
        x181=torch.nn.functional.relu(x180,inplace=True)
        x182=self.maxpool2d11(x166)
        x183=self.conv2d50(x182)
        x184=self.batchnorm2d50(x183)
        x185=torch.nn.functional.relu(x184,inplace=True)
        x186=torch.cat([x169, x175, x181, x185], 1)
        x187=self.conv2d51(x186)
        x188=self.batchnorm2d51(x187)
        x189=torch.nn.functional.relu(x188,inplace=True)
        x190=self.conv2d52(x186)
        x191=self.batchnorm2d52(x190)
        x192=torch.nn.functional.relu(x191,inplace=True)
        x193=self.conv2d53(x192)
        x194=self.batchnorm2d53(x193)
        x195=torch.nn.functional.relu(x194,inplace=True)
        x196=self.conv2d54(x186)
        x197=self.batchnorm2d54(x196)
        x198=torch.nn.functional.relu(x197,inplace=True)
        x199=self.conv2d55(x198)
        x200=self.batchnorm2d55(x199)
        x201=torch.nn.functional.relu(x200,inplace=True)
        x202=self.maxpool2d12(x186)
        x203=self.conv2d56(x202)
        x204=self.batchnorm2d56(x203)
        x205=torch.nn.functional.relu(x204,inplace=True)
        x206=torch.cat([x189, x195, x201, x205], 1)
        x207=self.adaptiveavgpool2d0(x206)
        x208=torch.flatten(x207, 1)
        x209=self.dropout0(x208)
        x210=self.linear0(x209)

m = M().eval()
x = torch.rand(1, 3, 224, 224)
start = time.time()
output = m(x)
end = time.time()
print(end-start)
