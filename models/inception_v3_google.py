import torch
from torch import tensor
import torch.nn as nn
from torch.nn import *
import torchvision
import torchvision.models as models
from torchvision.ops.stochastic_depth import stochastic_depth
import time
import builtins
import operator
import sys
import os

class M(torch.nn.Module):
    def __init__(self):
        super(M, self).__init__()
        self.conv2d0 = Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), bias=False)
        self.batchnorm2d0 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d1 = Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), bias=False)
        self.batchnorm2d1 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d2 = Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d2 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d0 = MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.conv2d3 = Conv2d(64, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d3 = BatchNorm2d(80, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d4 = Conv2d(80, 192, kernel_size=(3, 3), stride=(1, 1), bias=False)
        self.batchnorm2d4 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2d1 = MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
        self.conv2d5 = Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d5 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d6 = Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d6 = BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d7 = Conv2d(48, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
        self.batchnorm2d7 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d8 = Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d8 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d9 = Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d9 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d10 = Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d10 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d11 = Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d11 = BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d12 = Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d12 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d13 = Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d13 = BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d14 = Conv2d(48, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
        self.batchnorm2d14 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d15 = Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d15 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d16 = Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d16 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d17 = Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d17 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d18 = Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d18 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d19 = Conv2d(288, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d19 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d20 = Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d20 = BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d21 = Conv2d(48, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
        self.batchnorm2d21 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d22 = Conv2d(288, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d22 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d23 = Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d23 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d24 = Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d24 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d25 = Conv2d(288, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d25 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d26 = Conv2d(288, 384, kernel_size=(3, 3), stride=(2, 2), bias=False)
        self.batchnorm2d26 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d27 = Conv2d(288, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d27 = BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d28 = Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d28 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d29 = Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), bias=False)
        self.batchnorm2d29 = BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d30 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d30 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d31 = Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d31 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d32 = Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d32 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d33 = Conv2d(128, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d33 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d34 = Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d34 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d35 = Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d35 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d36 = Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d36 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d37 = Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d37 = BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d38 = Conv2d(128, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d38 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d39 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d39 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d40 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d40 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d41 = Conv2d(768, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d41 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d42 = Conv2d(160, 160, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d42 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d43 = Conv2d(160, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d43 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d44 = Conv2d(768, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d44 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d45 = Conv2d(160, 160, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d45 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d46 = Conv2d(160, 160, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d46 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d47 = Conv2d(160, 160, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d47 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d48 = Conv2d(160, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d48 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d49 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d49 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d50 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d50 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d51 = Conv2d(768, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d51 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d52 = Conv2d(160, 160, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d52 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d53 = Conv2d(160, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d53 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d54 = Conv2d(768, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d54 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d55 = Conv2d(160, 160, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d55 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d56 = Conv2d(160, 160, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d56 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d57 = Conv2d(160, 160, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d57 = BatchNorm2d(160, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d58 = Conv2d(160, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d58 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d59 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d59 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d60 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d60 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d61 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d61 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d62 = Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d62 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d63 = Conv2d(192, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d63 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d64 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d64 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d65 = Conv2d(192, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d65 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d66 = Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d66 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d67 = Conv2d(192, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d67 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d68 = Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d68 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d69 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d69 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d70 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d70 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d71 = Conv2d(192, 320, kernel_size=(3, 3), stride=(2, 2), bias=False)
        self.batchnorm2d71 = BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d72 = Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d72 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d73 = Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), bias=False)
        self.batchnorm2d73 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d74 = Conv2d(192, 192, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), bias=False)
        self.batchnorm2d74 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d75 = Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), bias=False)
        self.batchnorm2d75 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d76 = Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d76 = BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d77 = Conv2d(1280, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d77 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d78 = Conv2d(384, 384, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        self.batchnorm2d78 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d79 = Conv2d(384, 384, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        self.batchnorm2d79 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d80 = Conv2d(1280, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d80 = BatchNorm2d(448, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d81 = Conv2d(448, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d81 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d82 = Conv2d(384, 384, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        self.batchnorm2d82 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d83 = Conv2d(384, 384, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        self.batchnorm2d83 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d84 = Conv2d(1280, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d84 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d85 = Conv2d(2048, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d85 = BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d86 = Conv2d(2048, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d86 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d87 = Conv2d(384, 384, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        self.batchnorm2d87 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d88 = Conv2d(384, 384, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        self.batchnorm2d88 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d89 = Conv2d(2048, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d89 = BatchNorm2d(448, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d90 = Conv2d(448, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.batchnorm2d90 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d91 = Conv2d(384, 384, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
        self.batchnorm2d91 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d92 = Conv2d(384, 384, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
        self.batchnorm2d92 = BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv2d93 = Conv2d(2048, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.batchnorm2d93 = BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.adaptiveavgpool2d0 = AdaptiveAvgPool2d(output_size=(1, 1))
        self.dropout0 = Dropout(p=0.5, inplace=False)
        self.linear0 = Linear(in_features=2048, out_features=1000, bias=True)

    def forward(self, x):
        x0=x
        x1=operator.getitem(x0, (slice(None, None, None), 0))
        x2=torch.unsqueeze(x1, 1)
        x3=operator.mul(x2, 0.458)
        x4=operator.add(x3, -0.030000000000000027)
        x5=operator.getitem(x0, (slice(None, None, None), 1))
        x6=torch.unsqueeze(x5, 1)
        x7=operator.mul(x6, 0.448)
        x8=operator.add(x7, -0.08799999999999997)
        x9=operator.getitem(x0, (slice(None, None, None), 2))
        x10=torch.unsqueeze(x9, 1)
        x11=operator.mul(x10, 0.45)
        x12=operator.add(x11, -0.18799999999999994)
        x13=torch.cat((x4, x8, x12), 1)
        x14=self.conv2d0(x13)
        x15=self.batchnorm2d0(x14)
        x16=torch.nn.functional.relu(x15,inplace=True)
        x17=self.conv2d1(x16)
        x18=self.batchnorm2d1(x17)
        x19=torch.nn.functional.relu(x18,inplace=True)
        x20=self.conv2d2(x19)
        x21=self.batchnorm2d2(x20)
        x22=torch.nn.functional.relu(x21,inplace=True)
        x23=self.maxpool2d0(x22)
        x24=self.conv2d3(x23)
        x25=self.batchnorm2d3(x24)
        x26=torch.nn.functional.relu(x25,inplace=True)
        x27=self.conv2d4(x26)
        x28=self.batchnorm2d4(x27)
        x29=torch.nn.functional.relu(x28,inplace=True)
        x30=self.maxpool2d1(x29)
        x31=self.conv2d5(x30)
        x32=self.batchnorm2d5(x31)
        x33=torch.nn.functional.relu(x32,inplace=True)
        x34=self.conv2d6(x30)
        x35=self.batchnorm2d6(x34)
        x36=torch.nn.functional.relu(x35,inplace=True)
        x37=self.conv2d7(x36)
        x38=self.batchnorm2d7(x37)
        x39=torch.nn.functional.relu(x38,inplace=True)
        x40=self.conv2d8(x30)
        x41=self.batchnorm2d8(x40)
        x42=torch.nn.functional.relu(x41,inplace=True)
        x43=self.conv2d9(x42)
        x44=self.batchnorm2d9(x43)
        x45=torch.nn.functional.relu(x44,inplace=True)
        x46=self.conv2d10(x45)
        x47=self.batchnorm2d10(x46)
        x48=torch.nn.functional.relu(x47,inplace=True)
        x49=torch._C._nn.avg_pool2d(x30,kernel_size=3, stride=1, padding=1)
        x50=self.conv2d11(x49)
        x51=self.batchnorm2d11(x50)
        x52=torch.nn.functional.relu(x51,inplace=True)
        x53=torch.cat([x33, x39, x48, x52], 1)
        x54=self.conv2d12(x53)
        x55=self.batchnorm2d12(x54)
        x56=torch.nn.functional.relu(x55,inplace=True)
        x57=self.conv2d13(x53)
        x58=self.batchnorm2d13(x57)
        x59=torch.nn.functional.relu(x58,inplace=True)
        x60=self.conv2d14(x59)
        x61=self.batchnorm2d14(x60)
        x62=torch.nn.functional.relu(x61,inplace=True)
        x63=self.conv2d15(x53)
        x64=self.batchnorm2d15(x63)
        x65=torch.nn.functional.relu(x64,inplace=True)
        x66=self.conv2d16(x65)
        x67=self.batchnorm2d16(x66)
        x68=torch.nn.functional.relu(x67,inplace=True)
        x69=self.conv2d17(x68)
        x70=self.batchnorm2d17(x69)
        x71=torch.nn.functional.relu(x70,inplace=True)
        x72=torch._C._nn.avg_pool2d(x53,kernel_size=3, stride=1, padding=1)
        x73=self.conv2d18(x72)
        x74=self.batchnorm2d18(x73)
        x75=torch.nn.functional.relu(x74,inplace=True)
        x76=torch.cat([x56, x62, x71, x75], 1)
        x77=self.conv2d19(x76)
        x78=self.batchnorm2d19(x77)
        x79=torch.nn.functional.relu(x78,inplace=True)
        x80=self.conv2d20(x76)
        x81=self.batchnorm2d20(x80)
        x82=torch.nn.functional.relu(x81,inplace=True)
        x83=self.conv2d21(x82)
        x84=self.batchnorm2d21(x83)
        x85=torch.nn.functional.relu(x84,inplace=True)
        x86=self.conv2d22(x76)
        x87=self.batchnorm2d22(x86)
        x88=torch.nn.functional.relu(x87,inplace=True)
        x89=self.conv2d23(x88)
        x90=self.batchnorm2d23(x89)
        x91=torch.nn.functional.relu(x90,inplace=True)
        x92=self.conv2d24(x91)
        x93=self.batchnorm2d24(x92)
        x94=torch.nn.functional.relu(x93,inplace=True)
        x95=torch._C._nn.avg_pool2d(x76,kernel_size=3, stride=1, padding=1)
        x96=self.conv2d25(x95)
        x97=self.batchnorm2d25(x96)
        x98=torch.nn.functional.relu(x97,inplace=True)
        x99=torch.cat([x79, x85, x94, x98], 1)
        x100=self.conv2d26(x99)
        x101=self.batchnorm2d26(x100)
        x102=torch.nn.functional.relu(x101,inplace=True)
        x103=self.conv2d27(x99)
        x104=self.batchnorm2d27(x103)
        x105=torch.nn.functional.relu(x104,inplace=True)
        x106=self.conv2d28(x105)
        x107=self.batchnorm2d28(x106)
        x108=torch.nn.functional.relu(x107,inplace=True)
        x109=self.conv2d29(x108)
        x110=self.batchnorm2d29(x109)
        x111=torch.nn.functional.relu(x110,inplace=True)
        x112=torch.nn.functional.max_pool2d(x99, 3,stride=2, padding=0, dilation=1, ceil_mode=False, return_indices=False)
        x113=torch.cat([x102, x111, x112], 1)
        x114=self.conv2d30(x113)
        x115=self.batchnorm2d30(x114)
        x116=torch.nn.functional.relu(x115,inplace=True)
        x117=self.conv2d31(x113)
        x118=self.batchnorm2d31(x117)
        x119=torch.nn.functional.relu(x118,inplace=True)
        x120=self.conv2d32(x119)
        x121=self.batchnorm2d32(x120)
        x122=torch.nn.functional.relu(x121,inplace=True)
        x123=self.conv2d33(x122)
        x124=self.batchnorm2d33(x123)
        x125=torch.nn.functional.relu(x124,inplace=True)
        x126=self.conv2d34(x113)
        x127=self.batchnorm2d34(x126)
        x128=torch.nn.functional.relu(x127,inplace=True)
        x129=self.conv2d35(x128)
        x130=self.batchnorm2d35(x129)
        x131=torch.nn.functional.relu(x130,inplace=True)
        x132=self.conv2d36(x131)
        x133=self.batchnorm2d36(x132)
        x134=torch.nn.functional.relu(x133,inplace=True)
        x135=self.conv2d37(x134)
        x136=self.batchnorm2d37(x135)
        x137=torch.nn.functional.relu(x136,inplace=True)
        x138=self.conv2d38(x137)
        x139=self.batchnorm2d38(x138)
        x140=torch.nn.functional.relu(x139,inplace=True)
        x141=torch._C._nn.avg_pool2d(x113,kernel_size=3, stride=1, padding=1)
        x142=self.conv2d39(x141)
        x143=self.batchnorm2d39(x142)
        x144=torch.nn.functional.relu(x143,inplace=True)
        x145=torch.cat([x116, x125, x140, x144], 1)
        x146=self.conv2d40(x145)
        x147=self.batchnorm2d40(x146)
        x148=torch.nn.functional.relu(x147,inplace=True)
        x149=self.conv2d41(x145)
        x150=self.batchnorm2d41(x149)
        x151=torch.nn.functional.relu(x150,inplace=True)
        x152=self.conv2d42(x151)
        x153=self.batchnorm2d42(x152)
        x154=torch.nn.functional.relu(x153,inplace=True)
        x155=self.conv2d43(x154)
        x156=self.batchnorm2d43(x155)
        x157=torch.nn.functional.relu(x156,inplace=True)
        x158=self.conv2d44(x145)
        x159=self.batchnorm2d44(x158)
        x160=torch.nn.functional.relu(x159,inplace=True)
        x161=self.conv2d45(x160)
        x162=self.batchnorm2d45(x161)
        x163=torch.nn.functional.relu(x162,inplace=True)
        x164=self.conv2d46(x163)
        x165=self.batchnorm2d46(x164)
        x166=torch.nn.functional.relu(x165,inplace=True)
        x167=self.conv2d47(x166)
        x168=self.batchnorm2d47(x167)
        x169=torch.nn.functional.relu(x168,inplace=True)
        x170=self.conv2d48(x169)
        x171=self.batchnorm2d48(x170)
        x172=torch.nn.functional.relu(x171,inplace=True)
        x173=torch._C._nn.avg_pool2d(x145,kernel_size=3, stride=1, padding=1)
        x174=self.conv2d49(x173)
        x175=self.batchnorm2d49(x174)
        x176=torch.nn.functional.relu(x175,inplace=True)
        x177=torch.cat([x148, x157, x172, x176], 1)
        x178=self.conv2d50(x177)
        x179=self.batchnorm2d50(x178)
        x180=torch.nn.functional.relu(x179,inplace=True)
        x181=self.conv2d51(x177)
        x182=self.batchnorm2d51(x181)
        x183=torch.nn.functional.relu(x182,inplace=True)
        x184=self.conv2d52(x183)
        x185=self.batchnorm2d52(x184)
        x186=torch.nn.functional.relu(x185,inplace=True)
        x187=self.conv2d53(x186)
        x188=self.batchnorm2d53(x187)
        x189=torch.nn.functional.relu(x188,inplace=True)
        x190=self.conv2d54(x177)
        x191=self.batchnorm2d54(x190)
        x192=torch.nn.functional.relu(x191,inplace=True)
        x193=self.conv2d55(x192)
        x194=self.batchnorm2d55(x193)
        x195=torch.nn.functional.relu(x194,inplace=True)
        x196=self.conv2d56(x195)
        x197=self.batchnorm2d56(x196)
        x198=torch.nn.functional.relu(x197,inplace=True)
        x199=self.conv2d57(x198)
        x200=self.batchnorm2d57(x199)
        x201=torch.nn.functional.relu(x200,inplace=True)
        x202=self.conv2d58(x201)
        x203=self.batchnorm2d58(x202)
        x204=torch.nn.functional.relu(x203,inplace=True)
        x205=torch._C._nn.avg_pool2d(x177,kernel_size=3, stride=1, padding=1)
        x206=self.conv2d59(x205)
        x207=self.batchnorm2d59(x206)
        x208=torch.nn.functional.relu(x207,inplace=True)
        x209=torch.cat([x180, x189, x204, x208], 1)
        x210=self.conv2d60(x209)
        x211=self.batchnorm2d60(x210)
        x212=torch.nn.functional.relu(x211,inplace=True)
        x213=self.conv2d61(x209)
        x214=self.batchnorm2d61(x213)
        x215=torch.nn.functional.relu(x214,inplace=True)
        x216=self.conv2d62(x215)
        x217=self.batchnorm2d62(x216)
        x218=torch.nn.functional.relu(x217,inplace=True)
        x219=self.conv2d63(x218)
        x220=self.batchnorm2d63(x219)
        x221=torch.nn.functional.relu(x220,inplace=True)
        x222=self.conv2d64(x209)
        x223=self.batchnorm2d64(x222)
        x224=torch.nn.functional.relu(x223,inplace=True)
        x225=self.conv2d65(x224)
        x226=self.batchnorm2d65(x225)
        x227=torch.nn.functional.relu(x226,inplace=True)
        x228=self.conv2d66(x227)
        x229=self.batchnorm2d66(x228)
        x230=torch.nn.functional.relu(x229,inplace=True)
        x231=self.conv2d67(x230)
        x232=self.batchnorm2d67(x231)
        x233=torch.nn.functional.relu(x232,inplace=True)
        x234=self.conv2d68(x233)
        x235=self.batchnorm2d68(x234)
        x236=torch.nn.functional.relu(x235,inplace=True)
        x237=torch._C._nn.avg_pool2d(x209,kernel_size=3, stride=1, padding=1)
        x238=self.conv2d69(x237)
        x239=self.batchnorm2d69(x238)
        x240=torch.nn.functional.relu(x239,inplace=True)
        x241=torch.cat([x212, x221, x236, x240], 1)
        x242=self.conv2d70(x241)
        x243=self.batchnorm2d70(x242)
        x244=torch.nn.functional.relu(x243,inplace=True)
        x245=self.conv2d71(x244)
        x246=self.batchnorm2d71(x245)
        x247=torch.nn.functional.relu(x246,inplace=True)
        x248=self.conv2d72(x241)
        x249=self.batchnorm2d72(x248)
        x250=torch.nn.functional.relu(x249,inplace=True)
        x251=self.conv2d73(x250)
        x252=self.batchnorm2d73(x251)
        x253=torch.nn.functional.relu(x252,inplace=True)
        x254=self.conv2d74(x253)
        x255=self.batchnorm2d74(x254)
        x256=torch.nn.functional.relu(x255,inplace=True)
        x257=self.conv2d75(x256)
        x258=self.batchnorm2d75(x257)
        x259=torch.nn.functional.relu(x258,inplace=True)
        x260=torch.nn.functional.max_pool2d(x241, 3,stride=2, padding=0, dilation=1, ceil_mode=False, return_indices=False)
        x261=torch.cat([x247, x259, x260], 1)
        x262=self.conv2d76(x261)
        x263=self.batchnorm2d76(x262)
        x264=torch.nn.functional.relu(x263,inplace=True)
        x265=self.conv2d77(x261)
        x266=self.batchnorm2d77(x265)
        x267=torch.nn.functional.relu(x266,inplace=True)
        x268=self.conv2d78(x267)
        x269=self.batchnorm2d78(x268)
        x270=torch.nn.functional.relu(x269,inplace=True)
        x271=self.conv2d79(x267)
        x272=self.batchnorm2d79(x271)
        x273=torch.nn.functional.relu(x272,inplace=True)
        x274=torch.cat([x270, x273], 1)
        x275=self.conv2d80(x261)
        x276=self.batchnorm2d80(x275)
        x277=torch.nn.functional.relu(x276,inplace=True)
        x278=self.conv2d81(x277)
        x279=self.batchnorm2d81(x278)
        x280=torch.nn.functional.relu(x279,inplace=True)
        x281=self.conv2d82(x280)
        x282=self.batchnorm2d82(x281)
        x283=torch.nn.functional.relu(x282,inplace=True)
        x284=self.conv2d83(x280)
        x285=self.batchnorm2d83(x284)
        x286=torch.nn.functional.relu(x285,inplace=True)
        x287=torch.cat([x283, x286], 1)
        x288=torch._C._nn.avg_pool2d(x261,kernel_size=3, stride=1, padding=1)
        x289=self.conv2d84(x288)
        x290=self.batchnorm2d84(x289)
        x291=torch.nn.functional.relu(x290,inplace=True)
        x292=torch.cat([x264, x274, x287, x291], 1)
        x293=self.conv2d85(x292)
        x294=self.batchnorm2d85(x293)
        x295=torch.nn.functional.relu(x294,inplace=True)
        x296=self.conv2d86(x292)
        x297=self.batchnorm2d86(x296)
        x298=torch.nn.functional.relu(x297,inplace=True)
        x299=self.conv2d87(x298)
        x300=self.batchnorm2d87(x299)
        x301=torch.nn.functional.relu(x300,inplace=True)
        x302=self.conv2d88(x298)
        x303=self.batchnorm2d88(x302)
        x304=torch.nn.functional.relu(x303,inplace=True)
        x305=torch.cat([x301, x304], 1)
        x306=self.conv2d89(x292)
        x307=self.batchnorm2d89(x306)
        x308=torch.nn.functional.relu(x307,inplace=True)
        x309=self.conv2d90(x308)
        x310=self.batchnorm2d90(x309)
        x311=torch.nn.functional.relu(x310,inplace=True)
        x312=self.conv2d91(x311)
        x313=self.batchnorm2d91(x312)
        x314=torch.nn.functional.relu(x313,inplace=True)
        x315=self.conv2d92(x311)
        x316=self.batchnorm2d92(x315)
        x317=torch.nn.functional.relu(x316,inplace=True)
        x318=torch.cat([x314, x317], 1)
        x319=torch._C._nn.avg_pool2d(x292,kernel_size=3, stride=1, padding=1)
        x320=self.conv2d93(x319)
        x321=self.batchnorm2d93(x320)
        x322=torch.nn.functional.relu(x321,inplace=True)
        x323=torch.cat([x295, x305, x318, x322], 1)
        x324=self.adaptiveavgpool2d0(x323)
        x325=self.dropout0(x324)
        x326=torch.flatten(x325, 1)
        x327=self.linear0(x326)

m = M().eval()
CORES=os.popen("lscpu | grep Core | awk '{print $4}'").readlines()
SOCKETS=os.popen("lscpu | grep Socket | awk '{print $2}'").readlines()
BS=int(CORES[0])*int(SOCKETS[0])
batch_size=BS
x = torch.rand(1, 3, 224, 224)
def print_throughput(flag):
    start_time=time.time()
    for i in range(10):
        output = m(x)
    total_iter_time = time.time() - start_time
    Throughput = batch_size * 10 / total_iter_time
    file_current = os.path.basename(__file__)
    print(file_current,',',BS,',',flag,',',Throughput)
for flag in {False,True}:
    torch._C._jit_set_texpr_fuser_enabled(flag)
    print_throughput(flag)
